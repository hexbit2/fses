name: Code Reviewer

on:
  pull_request:
    branches: [master]
  
  # push:
  #   branches: [master]

  schedule:
  - cron: '0 8 * * *' # Will run every day at 8 AM UTC i.e 4 AM EDT

jobs:
  cg_review:
    # When triggred due to PR, it will only scan the changed files & the report will be available in PR.
    # When triggred as part of the schedule, then it will be available under Security tab in GitHub.
    # The idea here is that this Job will run, when triggred by both schedule & PR

    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2  # Region to access CodeGuru 

      - name: CodeGuru Reviewer
        uses: aws-actions/codeguru-reviewer@v1.1
        with:
          s3_bucket: codeguru-reviewer-fses
        
      - name: Upload Result
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: codeguru-results.sarif.json

  pep_check:
    # When triggred by PR, it should run for only changed files.
    # When triigred by schedule it should run for all the *.py files
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9.5'

      - name: Install flake8 & autopep8
        run: pip install flake8 autopep8

      - name: Debug
        run: |
          python --version
          pip freeze

      - uses: jitterbit/get-changed-files@v1
        if: ${{ github.event_name != 'schedule' }}
        id: files
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        name: Get Changed Files
      
      - run: >-
          echo "::set-output name=MFILES::$(
            for changed_file in ${{ steps.files.outputs.all }}; do
              echo -n ",./${changed_file}" | grep -E '\.py$' | tr -d '\n'
            done | sed 's/^,//g'
          )"
        id: mfiles
        if: ${{ github.event_name != 'schedule' }}
        name: Modify File Paths

      - name: Printing
        if: ${{ github.event_name != 'schedule' }}
        run: |
          echo "All:"
          echo "${{ steps.mfiles.outputs.MFILES }}"

      - name: Run flake8 check - Non Schedule
        id: flake8
        if: ${{ github.event_name != 'schedule' && steps.files.outputs.all != null }}
        run: flake8 --exclude=venv,__pycache__,.github --filename=${{ steps.mfiles.outputs.MFILES }}

      - name: In place autopep8
        id: autopep8
        if: ${{ github.event_name != 'schedule' && steps.flake8.outcome == 'failure' && always() }}
        uses: peter-evans/autopep8@v1
        with:
          args: --in-place ${{ steps.files.outputs.all }}

      - name: Create a Branch for PR
        id: brname
        if: ${{  github.event_name != 'schedule' && steps.autopep8.outcome == 'success' && always() }}
        run: echo ::set-output name=branch-name::"${{ github.head_ref }}-autopep8-fix-$(date +%s)"

      - name: Print Branch
        if: ${{ github.event_name != 'schedule' && steps.autopep8.outcome == 'success' && always() }}
        run: echo "${{ steps.brname.outputs.branch-name }}"
        
      - name: Create Pull Request
        if: ${{ github.event_name != 'schedule' && steps.brname.outcome == 'success' && steps.autopep8.outcome == 'success' && always() }}
        uses: peter-evans/create-pull-request@v3
        with:
          commit-message: autopep8 action fixes
          title: ${{ github.event.pull_request.title }} - autopep8 action fixes
          body: This is an auto-generated PR with fixes by autopep8.
          labels: autopep8, automated pr
          branch: ${{ steps.brname.outputs.branch-name }}
          base: ${{ github.head_ref }}
          token: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Run flake8 check - Schedule
        if: ${{ github.event_name == 'schedule' }}
        run: flake8 --exclude=venv,__pycache__
  